/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screen;

import java.awt.Color;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author Thiago
 */
public class inputScreen extends javax.swing.JFrame {

    /**
     * Creates new form inputScreen
     */
    public inputScreen() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkButton = new javax.swing.JButton();
        inputCPF = new javax.swing.JFormattedTextField();
        checkText = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CPFChecker");
        setResizable(false);

        checkButton.setFont(new java.awt.Font("Leelawadee UI", 1, 11)); // NOI18N
        checkButton.setText("CHECK");
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionPerformed(evt);
            }
        });

        inputCPF.setVerifyInputWhenFocusTarget(false);

        checkText.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Insira o CPF (Somente números):");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel2.setText("Developed by thfribeiro -- 2019");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/screen/imagens/icon.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(inputCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkText, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkButton))
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(inputCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkText, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(0, 0, 0))
        );

        checkButton.getAccessibleContext().setAccessibleName("checkButton");
        checkButton.getAccessibleContext().setAccessibleDescription("checkButton");
        inputCPF.getAccessibleContext().setAccessibleName("inputCPF");
        inputCPF.getAccessibleContext().setAccessibleDescription("inputCPF");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public class Reminder {

        Timer timer;

        public Reminder(int seconds) {
            timer = new Timer();
            timer.schedule(new RemindTask(), seconds * 1000);
        }

        class RemindTask extends TimerTask {

            public void run() {
                clearScreen();
                timer.cancel(); //Terminate the timer thread
            }
        }
    }

    public Boolean stCheck(int nrmCpf[]) {

        int total = (nrmCpf[0] * 10) + (nrmCpf[1] * 9) + (nrmCpf[2] * 8) + (nrmCpf[3] * 7) + (nrmCpf[4] * 6) + (nrmCpf[5] * 5) + (nrmCpf[6] * 4) + (nrmCpf[7] * 3) + (nrmCpf[8] * 2);

        total = (total * 10) % 11;

        if (total == 10) {
            total = 0;
        }

        if (total == nrmCpf[9]) {
            return true;
        } else {
            return false;
        }
    }

    public Boolean ndCheck(int nrmCpf[]) {

        int total = (nrmCpf[0] * 11) + (nrmCpf[1] * 10) + (nrmCpf[2] * 9) + (nrmCpf[3] * 8) + (nrmCpf[4] * 7) + (nrmCpf[5] * 6) + (nrmCpf[6] * 5) + (nrmCpf[7] * 4) + (nrmCpf[8] * 3) + (nrmCpf[9] * 2);

        total = (total * 10) % 11;

        if (total == 10) {
            total = 0;
        }

        if (total == nrmCpf[10]) {
            return true;
        } else {
            return false;
        }
    }

    public Boolean CPFCheck(String cpf) {
        int nrmCpf[] = new int[11];
        try{
        nrmCpf[0] = Integer.parseInt(cpf.substring(0, 1));
        nrmCpf[1] = Integer.parseInt(cpf.substring(1, 2));
        nrmCpf[2] = Integer.parseInt(cpf.substring(2, 3));
        nrmCpf[3] = Integer.parseInt(cpf.substring(3, 4));
        nrmCpf[4] = Integer.parseInt(cpf.substring(4, 5));
        nrmCpf[5] = Integer.parseInt(cpf.substring(5, 6));
        nrmCpf[6] = Integer.parseInt(cpf.substring(6, 7));
        nrmCpf[7] = Integer.parseInt(cpf.substring(7, 8));
        nrmCpf[8] = Integer.parseInt(cpf.substring(8, 9));
        nrmCpf[9] = Integer.parseInt(cpf.substring(9, 10));
        nrmCpf[10] = Integer.parseInt(cpf.substring(10, 11));
                if (stCheck(nrmCpf) == true) {
            if (ndCheck(nrmCpf) == true) {
                return true;
            }
        }
        }
        catch(Exception e){
        }
        return false;
    }

    public void clearScreen() {
        checkButton.setBackground(Color.LIGHT_GRAY);
        checkText.setText("");

    }

    private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionPerformed
        String cpf = inputCPF.getText();
        if (cpf.length() == 11) {
            
            if (CPFCheck(inputCPF.getText()) == true) {
                inputCPF.setText("");
                checkButton.setBackground(Color.green);
                checkText.setText("CPF Válido");
            }
            else {
            inputCPF.setText("");
            checkButton.setBackground(Color.red);
            checkText.setText("CPF Inválido");
        } 
        }
        else {
            inputCPF.setText("");
            checkButton.setBackground(Color.red);
            checkText.setText("CPF Inválido");

        
        }
        new Reminder(3);
    }//GEN-LAST:event_checkButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inputScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inputScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inputScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inputScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inputScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkButton;
    private javax.swing.JLabel checkText;
    private javax.swing.JFormattedTextField inputCPF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
